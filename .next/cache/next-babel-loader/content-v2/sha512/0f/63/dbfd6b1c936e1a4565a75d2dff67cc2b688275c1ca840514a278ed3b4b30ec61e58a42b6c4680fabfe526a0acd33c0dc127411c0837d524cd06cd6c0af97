{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\wmarc\\\\OneDrive\\\\Pulpit\\\\NextJS\\\\bigproject\\\\pages\\\\new-meetup\\\\[meetupId].js\";\nimport classes from \"./meetup.module.css\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = () => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Tokyo_Shibuya_Scramble_Crossing_2018-10-09.jpg/1280px-Tokyo_Shibuya_Scramble_Crossing_2018-10-09.jpg\",\n    title: \"first meetup\",\n    address: \"Somei street,343234 City\",\n    description: \"The meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:Mh4FowKbpnWm8pXw@cluster0.q56p7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetupsID = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetupsID.map(meetupID => ({\n      params: {\n        meetupId: meetupID._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin:Mh4FowKbpnWm8pXw@cluster0.q56p7.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetup\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/wmarc/OneDrive/Pulpit/NextJS/bigproject/pages/new-meetup/[meetupId].js"],"names":["classes","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetupsID","find","_id","toArray","close","fallback","paths","map","meetupID","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetup","props","meetupData"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAC,gKADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,SAAS,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAxB;AACAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,SAAS,CAACO,GAAV,CAAeC,QAAD,KAAe;AAClCC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,QAAQ,CAACN,GAAT,CAAaS,QAAb;AAAZ;AAD0B,KAAf,CAAd;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEc;AAAP,GAA1B,CAA7B;AACArB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLa,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEJ;AADP;AADF,GAAP;AAKD;AAED,eAAerB,aAAf","sourcesContent":["import classes from \"./meetup.module.css\";\r\nimport { MongoClient } from \"mongodb\";\r\n\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetails\r\n      image=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Tokyo_Shibuya_Scramble_Crossing_2018-10-09.jpg/1280px-Tokyo_Shibuya_Scramble_Crossing_2018-10-09.jpg\"\r\n      title=\"first meetup\"\r\n      address=\"Somei street,343234 City\"\r\n      description=\"The meetup description\"\r\n    />\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:Mh4FowKbpnWm8pXw@cluster0.q56p7.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetupsID = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetupsID.map((meetupID) => ({\r\n      params: { meetupId: meetupID._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:Mh4FowKbpnWm8pXw@cluster0.q56p7.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetup });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}